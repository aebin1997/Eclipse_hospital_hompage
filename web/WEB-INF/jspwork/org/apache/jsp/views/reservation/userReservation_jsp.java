/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.43
 * Generated at: 2021-01-07 23:59:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.reservation;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import disease.model.vo.Disease;

public final class userReservation_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("disease.model.vo.Disease");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	ArrayList<Disease> list = (ArrayList<Disease>) request.getAttribute("list");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"/jiksan/resources/js/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write("//병명 -> 진료과 \r\n");
      out.write("function disease2dept(atag){ //this가 클릭한 a 태그\r\n");
      out.write("\tvar diseaseNm0 = atag.innerHTML;\r\n");
      out.write("\tconsole.log(\"diseaseNm0\" + diseaseNm0);\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl: \"/jiksan/d2dept\",\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\tdata: { \"diseaseNm1\" : diseaseNm0 }, //이름&값\r\n");
      out.write("\t\tsuccess: function(data){ //진료과명 = 데이터\r\n");
      out.write("\t\t\t//처리결과를 문자열로 받음\r\n");
      out.write("\t\t\tconsole.log(\"success : \" + data);\r\n");
      out.write("\t\t\t$(\"#dept_sel_list\").html(\"<li>\" + data + \"</li>\");\t\t\t\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: function(jqXHR, textstatus, errorthrown){\r\n");
      out.write("\t\t\t//에러 발생시 구동되는 콜백함수임\r\n");
      out.write("\t\t\tconsole.log(\"error : \" + jqXHR + \", \" + textstatus \r\n");
      out.write("\t\t\t\t\t+ \", \" + errorthrown);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("//진료과 -> 의사 정보\r\n");
      out.write("function dept2doctor(atag){ //this가 클릭한 a 태그\r\n");
      out.write("\tvar diseaseNm0 = atag.innerHTML;\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl: \"/jiksan/d2doctor\",\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\tdata: { \"diseaseNm1\" : diseaseNm0 }, //이름&값\r\n");
      out.write("\t\tsuccess: function(data){ //진료과명 = 데이터\r\n");
      out.write("\t\t\t//처리결과를 문자열로 받음\r\n");
      out.write("\t\t\tconsole.log(\"success : \" + data);\r\n");
      out.write("\t\t\t$(\"#dept_sel_list\").html(\"<li>\" + data + \"</li>\");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#doctor_sel_list\").html(\"<li>\" + data + \"</li>\");\t\t\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: function(jqXHR, textstatus, errorthrown){\r\n");
      out.write("\t\t\t//에러 발생시 구동되는 콜백함수임\r\n");
      out.write("\t\t\tconsole.log(\"error : \" + jqXHR + \", \" + textstatus \r\n");
      out.write("\t\t\t\t\t+ \", \" + errorthrown);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* function dept2doctor(){\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl: \"/jiksan/d2doctor\",\r\n");
      out.write("\t\ttype: \"post\",\r\n");
      out.write("\t\tdata: {diseaseNm : $(\"#diseaseNm\").val() },\r\n");
      out.write("\t\tsuccess: function(data){\r\n");
      out.write("\t\t\t//처리결과를 문자열로 받음\r\n");
      out.write("\t\t\tconsole.log(\"success : \" + data);\r\n");
      out.write("\t\t\tif(data == \"ok\"){\r\n");
      out.write("\t\t\t\tshow()\r\n");
      out.write("\t\t\t\t$(\"#user_pw1\").focus();\r\n");
      out.write("\t\t\t}else{\r\n");
      out.write("\t\t\t\talert(\"이미 사용중인 아이디입니다.\\n다시 입력하세요.\");\r\n");
      out.write("\t\t\t\t$(\"#user_id\").select();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: function(jqXHR, textstatus, errorthrown){\r\n");
      out.write("\t\t\t//에러 발생시 구동되는 콜백함수임\r\n");
      out.write("\t\t\tconsole.log(\"error : \" + jqXHR + \", \" + textstatus \r\n");
      out.write("\t\t\t\t\t+ \", \" + errorthrown);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("} */\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"disease\">\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

			for (Disease d : list) {
		
      out.write("\r\n");
      out.write("\t\t<ul class=\"list clfix scroll_list\" id=\"ds_sel_list\">\r\n");
      out.write("\t\t\t<li>\r\n");
      out.write("\t\t\t<a onclick=\"disease2dept(this);\" id=\"diseaseNm\" style=\"color: rgb(38, 82, 119); font-weight: 500;\">");
      out.print(d.getDiseaseNm());
      out.write("</a>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"dept\"> \r\n");
      out.write("\t\t<ul class=\"list clfix scroll_list\" id=\"dept_sel_list\"></ul>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"doctor\"> \r\n");
      out.write("\t\t<ul class=\"list clfix scroll_list\" id=\"doctor_sel_list\"></ul>\r\n");
      out.write("</div>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
